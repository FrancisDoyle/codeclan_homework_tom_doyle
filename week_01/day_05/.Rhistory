author_averages
no_na_book_info %>%
summarise(mean_rating = mean(average_rating)) %>%
pull()
author_averages %>%
mutate(above_average = authors_average >= 3.93) %>%
filter(above_average == TRUE)
author_averages %>%
mutate(above_average = authors_average >= 3.93) %>%
filter(above_average == FALSE)
publisher_averages <- no_na_book_info %>%
group_by(publisher) %>%
summarise(publisher_average = mean(average_rating)) %>%
arrange(desc(publisher_average))
publisher_averages
publisher_averages %>%
summarise(mean_rating = mean(publisher_average)) %>%
pull()
publisher_averages %>%
mutate(above_average = publisher_average >= 3.93) %>%
filter(above_average == TRUE)
publisher_averages %>%
mutate(above_average = publisher_average >= 3.93) %>%
filter(above_average == FALSE)
book_info %>%
group_by(language_code) %>%
summarise(num_of_books = n()) %>%  # Number of books in each language
arrange(desc(num_of_books))
books_per_language
books_per_language <- book_info %>%
group_by(language_code) %>%
summarise(num_of_books = n()) %>%  # Number of books in each language
arrange(desc(num_of_books))
books_per_language
books_per_language <- book_info %>%
group_by(language_code) %>%
summarise(num_of_books = n()) %>%  # Number of books in each language
arrange(desc(num_of_books))
books_per_language
book_info %>%
count(language_code)
books_per_language <- book_info %>%
group_by(language_code) %>%
summarise(num_of_books = n()) %>%  # Number of books in each language
arrange(desc(num_of_books))
books_per_language
book_info %>%
count(language_code)
arrange(desc(n))
books_per_language <- book_info %>%
group_by(language_code) %>%
summarise(num_of_books = n()) %>%  # Number of books in each language
arrange(desc(num_of_books))
books_per_language
book_info %>%
count(language_code)
arrange(desc(num_of_books))
books_per_language <- book_info %>%
group_by(language_code) %>%
summarise(num_of_books = n()) %>%  # Number of books in each language
arrange(desc(num_of_books))
books_per_language
book_info %>%
count(language_code) %>%
arrange(desc(num_of_books))
books_per_language <- book_info %>%
group_by(language_code) %>%
summarise(num_of_books = n()) %>%  # Number of books in each language
arrange(desc(num_of_books))
books_per_language
book_info %>%
count(language_code) %>%
arrange(desc(n))
no_na_book_info %>%
slice_max(average_rating, n = 5)
book_info %>%
slice_max(average_rating, n = 5)
book_info %>%
filter(ratings_count >= 100) %>%
slice_max(average_rating, n = 5)
# We start again with the min1_rating dataset
books_min1_rating %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 'new'
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
# filter(is.na(year)) # there are 2 books that have NA for year, but publication date is like normal?!
group_by(age) %>%
summarise(average_rating = mean(average_rating))
# We start again with the min1_rating dataset
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(books_min1_rating$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 'new'
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
# filter(is.na(year)) # there are 2 books that have NA for year, but publication date is like normal?!
group_by(age) %>%
summarise(average_rating = mean(average_rating))
# We start again with the min1_rating dataset
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(no_na_book_info $ publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 'new'
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
# filter(is.na(year)) # there are 2 books that have NA for year, but publication date is like normal?!
group_by(age) %>%
summarise(average_rating = mean(average_rating))
# In conclusion: 'old' books have an average rating of 3.95, 'young' 3.93
# old win!
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(no_na_book_info $ publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(no_na_book_info $ publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
# We start again with the min1_rating dataset
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(no_na_book_info $ publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 'new'
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
# filter(is.na(year)) # there are 2 books that have NA for year, but publication date is like normal?!
group_by(age) %>%
summarise(average_rating = mean(average_rating))
# We start again with the min1_rating dataset
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(no_na_book_info$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 'new'
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
# filter(is.na(year)) # there are 2 books that have NA for year, but publication date is like normal?!
group_by(age) %>%
summarise(average_rating = mean(average_rating))
# In conclusion: 'old' books have an average rating of 3.95, 'young' 3.93
# old win!
sum(is.na(no_na_book_info))
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(no_na_book_info$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
# We start again with the min1_rating dataset
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(no_na_book_info$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 'new'
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
# filter(is.na(year)) # there are 2 books that have NA for year, but publication date is like normal?!
group_by(age) %>%
summarise(average_rating = mean(average_rating))
library(tidyverse)
library(janitor)
library(dplyr)
book_info <- read_csv("data/books.csv")
dim(book_info)
view(book_info)
sum(is.na(book_info))
nrow(book_info) - nrow(drop_na(book_info))
colnames(book_info)
book_info %>%
select(everything()) %>%
summarise_all(funs(sum(is.na(.)))) # the "." refers to the output of the previous pipe
book_info %>%
summarise(across(.fns = ~ sum(is.na(.x))))
book_info %>%
filter(is.na(num_pages))
books_cleaning <- book_info %>%
mutate(num_pages = case_when(
bookID == "12224" ~ 208,
bookID == "16914" ~ 416,
bookID == "22128" ~ 342,
bookID == "34889" ~ 49,
.default = num_pages
))
no_na_book_info <- books_cleaning %>%
mutate(average_rating = case_when(
bookID == "12224" ~ 3.6,
bookID == "16914" ~ 3.58,
bookID == "22128" ~ 3.66,
bookID == "34889" ~ 0,
.default = average_rating
))
sum(is.na(no_na_book_info))
author_averages <- no_na_book_info %>%
group_by(authors) %>%
summarise(authors_average = mean(average_rating)) %>%
arrange(desc(authors_average))
author_averages
no_na_book_info %>%
summarise(mean_rating = mean(average_rating)) %>%
pull()
author_averages %>%
mutate(above_average = authors_average >= 3.93) %>%
filter(above_average == TRUE)
author_averages %>%
mutate(above_average = authors_average >= 3.93) %>%
filter(above_average == FALSE)
publisher_averages <- no_na_book_info %>%
group_by(publisher) %>%
summarise(publisher_average = mean(average_rating)) %>%
arrange(desc(publisher_average))
publisher_averages
publisher_averages %>%
summarise(mean_rating = mean(publisher_average)) %>%
pull()
publisher_averages %>%
mutate(above_average = publisher_average >= 3.93) %>%
filter(above_average == TRUE)
publisher_averages %>%
mutate(above_average = publisher_average >= 3.93) %>%
filter(above_average == FALSE)
books_per_language <- book_info %>%
group_by(language_code) %>%
summarise(num_of_books = n()) %>%  # Number of books in each language
arrange(desc(num_of_books))
books_per_language
book_info %>%
count(language_code) %>%
arrange(desc(n))
book_info %>%
filter(ratings_count >= 100) %>% #at least 100 ratings
slice_max(average_rating, n = 5)
# We start again with the min1_rating dataset
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(no_na_book_info$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 'new'
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
# filter(is.na(year)) # there are 2 books that have NA for year, but publication date is like normal?!
group_by(age) %>%
summarise(average_rating = mean(average_rating))
# In conclusion: 'old' books have an average rating of 3.95, 'young' 3.93
# old win!
# We start again with the min1_rating dataset
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(no_na_book_info$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 'new'
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
# filter(is.na(year)) # there are 2 books that have NA for year, but publication date is like normal?!
group_by(age) %>%
summarise(average_rating = mean(average_rating))
# In conclusion: 'old' books have an average rating of 3.95, 'young' 3.93
# old win!
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(no_na_book_info$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
mutate(year = format(as.Date(no_na_book_info$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
book_info %>%
select(everything()) %>%
summarise_all(funs(sum(is.na(.)))) # the "." refers to the output of the previous pipe
book_info %>%
select(everything()) %>%
summarise_all(funs(sum(is.na(.)))) # the "." refers to the output of the previous pipe
?summarise_all
book_info %>%
summarise(across(.fns = ~ sum(is.na(.x))))
book_info %>%
summarise_all(.fns = ~ sum(is.na(.x)))
book_info %>%
summarise(across(.fns = ~ sum(is.na(.x))))
book_info %>%
summarise_all(.funs = ~ sum(is.na(.x)))
no_na_book_info %>%
select(author, publication_date) %>%
mutate(jk = str_detect(authors, "Rowling"), .after = authors)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(jk = str_detect(authors, "Rowling"), .after = authors)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(jk = str_detect(authors, "Rowling"), .after = authors)
filter(jk = TRUE)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(jk = str_detect(authors, "Rowling"), .after = authors) %>%
filter(jk = TRUE)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(jk = str_detect(authors, "J.K Rowling"), .after = authors) %>%
filter(jk = TRUE)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(JK = str_detect(authors, "J.K. Rowling"), .after = authors) %>%
filter(JK == TRUE)
```
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(JK = str_detect(authors, "J.K. Rowling"), .after = authors) %>%
filter(JK == TRUE)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(jk = str_detect(authors, "J.K Rowling"), .after = authors) %>%
filter(jk = TRUE)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(jk = str_detect(authors, "J.K Rowling"), .after = authors) %>%
filter(jk = TRUE)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(JK = str_detect(authors, "J.K. Rowling"), .after = authors) %>%
filter(JK == TRUE)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(JK = str_detect(authors, "J.K Rowling"), .after = authors) %>%
filter(JK = TRUE)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(JK = str_detect(authors, "J.K. Rowling"), .after = authors) %>%
filter(JK == TRUE)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(JK = str_detect(authors, "J.K Rowling"), .after = authors) %>%
filter(JK == TRUE)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(JK = str_detect(authors, "J.K. Rowling"), .after = authors) %>%
filter(JK == TRUE)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(JK = str_detect(authors, "J.K Rowling"), .after = authors) %>%
filter(JK == TRUE)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(jk = str_detect(authors, "J.K Rowling"), .after = authors) %>%
filter(jk == TRUE)
no_na_book_info %>%
select(authors, publication_date) %>%
mutate(JK = str_detect(authors, "J.K. Rowling"), .after = authors) %>%
filter(JK == TRUE)
no_na_book_info %>%
select(authors) %>%
mutate(jk = str_detect(authors, "J.K Rowling"), .after = authors) %>%
filter(jk == TRUE)
no_na_book_info %>%
select(authors) %>%
mutate(JK = str_detect(authors, "J.K. Rowling"), .after = authors) %>%
filter(JK == TRUE)
no_na_book_info %>%
select(authors) %>%
mutate(jk = str_detect(authors, "J.K. Rowling"), .after = authors) %>%
filter(jk == TRUE)
no_na_book_info %>%
select(authors) %>%
mutate(JK = str_detect(authors, "J.K. Rowling"), .after = authors) %>%
filter(JK == TRUE)
no_na_book_info %>%
select(authors) %>%
mutate(jk = str_detect(authors, "J.K. Rowling"), .after = authors) %>%
filter(jk == TRUE)
library(tidyverse)
library(janitor)
library(dplyr)
book_info <- read_csv("data/books.csv")
dim(book_info)
view(book_info)
sum(is.na(book_info))
nrow(book_info) - nrow(drop_na(book_info))
colnames(book_info)
book_info %>%
select(everything()) %>%
summarise_all(funs(sum(is.na(.)))) # the "." refers to the output of the previous pipe
book_info %>%
summarise(across(.fns = ~ sum(is.na(.x))))
book_info %>%  #summarise all = summarise and across
summarise_all(.funs = ~ sum(is.na(.x)))
book_info %>%
filter(is.na(num_pages))
books_cleaning <- book_info %>%
mutate(num_pages = case_when(
bookID == "12224" ~ 208,
bookID == "16914" ~ 416,
bookID == "22128" ~ 342,
bookID == "34889" ~ 49,
.default = num_pages
))
no_na_book_info <- books_cleaning %>%
mutate(average_rating = case_when(
bookID == "12224" ~ 3.6,
bookID == "16914" ~ 3.58,
bookID == "22128" ~ 3.66,
bookID == "34889" ~ 0,
.default = average_rating
))
sum(is.na(no_na_book_info))
author_averages <- no_na_book_info %>%
group_by(authors) %>%
summarise(authors_average = mean(average_rating)) %>%
arrange(desc(authors_average))
author_averages
no_na_book_info %>%
summarise(mean_rating = mean(average_rating)) %>%
pull()
author_averages %>%
mutate(above_average = authors_average >= 3.93) %>%
filter(above_average == TRUE)
author_averages %>%
mutate(above_average = authors_average >= 3.93) %>%
filter(above_average == FALSE)
publisher_averages <- no_na_book_info %>%
group_by(publisher) %>%
summarise(publisher_average = mean(average_rating)) %>%
arrange(desc(publisher_average))
publisher_averages
publisher_averages %>%
summarise(mean_rating = mean(publisher_average)) %>%
pull()
publisher_averages %>%
mutate(above_average = publisher_average >= 3.93) %>%
filter(above_average == TRUE)
publisher_averages %>%
mutate(above_average = publisher_average >= 3.93) %>%
filter(above_average == FALSE)
books_per_language <- book_info %>%
group_by(language_code) %>%
summarise(num_of_books = n()) %>%  # Number of books in each language
arrange(desc(num_of_books))
books_per_language
book_info %>%
count(language_code) %>%
arrange(desc(n))
book_info %>%
filter(ratings_count >= 100) %>% #at least 100 ratings
slice_max(average_rating, n = 5)
# We start again with the min1_rating dataset
no_na_book_info %>%
select(title, authors, publication_date, average_rating) %>%
# lets focus on years only
mutate(year = format(as.Date(no_na_book_info$publication_date,
format="%m/%d/%Y"), "%Y"),
.before = publication_date) %>%
# Let's just create 2 groups, before 2000 is 'old' and younger than 2000 'new'
mutate(age = case_when(
year <2000 ~ "old",
year >=2000 ~ "young"
), .after = year) %>%
# filter(is.na(year)) # there are 2 books that have NA for year, but publication date is like normal?!
group_by(age) %>%
summarise(average_rating = mean(average_rating))
# In conclusion: 'old' books have an average rating of 3.95, 'young' 3.93
# old win!
no_na_book_info %>%
select(authors) %>%
mutate(jk = str_detect(authors, "J.K. Rowling"), .after = authors) %>%
filter(jk == TRUE)
