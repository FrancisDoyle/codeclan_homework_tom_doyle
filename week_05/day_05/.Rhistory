library(shiny); runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
library(leaflet)
library(tidyverse)
whisky <- CodeClanData::whisky
whisky %>%
filter(Region== "Speyside") %>%
leaflet() %>%
addProviderTiles(provider = providers$OpenStreetMap) %>%
addMarkers(lng = ~Longitude, lat= ~Latitude,
popup = ~Distillery)
View(whisky)
runApp('canadian_nhl_teams.R')
overview <- read_csv("data/overview.csv")
View(overview)
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
library(readxl)
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
library(shiny); runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
calgary_statistics <- read_xlsx("data/calgary.xlsx")
View(calgary_statistics)
calgary_statistics <- read_xlsx("data/calgary2.xlsx")
View(calgary_statistics)
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
library(shiny); runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
library(shiny); runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
library(shiny); runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
library(shiny); runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
runApp('canadian_nhl_teams.R')
overview <- read_csv("data/overview.csv")
overview %>%
ggplot(data, aes(fill=Avg, y=Capacity, x=Name)) +
geom_bar(position="stack", stat="identity")
overview %>%
ggplot(aes(fill=Avg, y=Capacity, x=Name)) +
geom_bar(position="stack", stat="identity")
overview %>%
filter(Name == "Calgary") %>%
ggplot(aes(fill=Avg, y=Capacity, x=Name)) +
geom_bar(position="stack", stat="identity")
overview %>%
select(Name == "Calgary") %>%
ggplot(aes(fill=Avg, y=Capacity, x=Name)) +
geom_bar(position="stack", stat="identity")
library(shiny)
library(leaflet)
library(readr)
library(ggplot2)
overview %>%
select(Name == "Calgary") %>%
ggplot(aes(fill=Avg, y=Capacity, x=Name)) +
geom_bar(position="stack", stat="identity")
overview %>%
select(Name == "Calgary") %>%
ggplot(aes(fill=Avg, y=Capacity, x=Name)) +
geom_bar(position="stack", stat="identity")
overview %>%
filter(Name == "Calgary") %>%
ggplot(aes(fill=Avg, y=Capacity, x=Name)) +
geom_bar(position="stack", stat="identity")
library(dplyr)
overview %>%
filter(Name == "Calgary") %>%
ggplot(aes(fill=Avg, y=Capacity, x=Name)) +
geom_bar(position="stack", stat="identity")
overview %>%
filter(Name == "Calgary") %>%
ggplot(aes(fill=Avg, y=Capacity, x=Capacity)) +
geom_bar(position="stack", stat="identity")
overview <- read_csv("data/overview.csv")
overview %>%
filter(Name == "Calgary") %>%
ggplot(aes(fill=Avg, y=Capacity, x=Max)) +
geom_bar(position="stack", stat="identity")
overview %>%
filter(Name == "Calgary") %>%
ggplot(aes(fill=Avg, y=Capacity, x=Name)) +
geom_bar(position="stack", stat="identity")
overview %>%
filter(Name == "Calgary") %>%
ggplot(aes(fill=Avg, y=Capacity, x=Max)) +
geom_bar(position="stack", stat="identity")
View(overview)
overview %>%
filter(Name == "Calgary") %>%
ggplot(aes(fill=Avg, y=Capacity, x=Name)) +
geom_bar(position="stack", stat="identity")
overview %>%
filter(Name == "Calgary") %>%
ggplot(aes(colour=Avg, y=Capacity, x=Name)) +
geom_bar(position="stack", stat="identity")
overview %>%
filter(Name == "Calgary") %>%
ggplot(aes(colour=Avg, y=Capacity, x=Name)) +
geom_bar(position="stack", stat="count")
overview %>%
filter(Name == "Calgary") %>%
ggplot() +
geom_bar(aes(x=Capacity,fill = Avg),
stat = "count")
overview %>%
filter(Name == "Calgary") %>%
ggplot() +
geom_bar(aes(x=Capacity,fill = Avg),
stat = "identify")
overview %>%
filter(Name == "Calgary") %>%
ggplot() +
geom_bar(aes(x=Capacity,fill = Avg),
stat = "identity")
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(calgary_data) +
geom_bar(aes(x = "", y = Remaining, fill = "Remaining Capacity"), stat = "identity", width = 1) +
geom_bar(aes(x = "", y = Avg, fill = "Average Capacity"), stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(x = NULL, y = "Capacity") +
scale_fill_manual(values = c("Remaining Capacity" = "yellow", "Average Capacity" = "red")) +
theme(panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
View(overview)
overview$Remaining <- overview$Capacity - overview$Avg
View(overview)
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = "", y = Remaining, fill = "Remaining Capacity"), stat = "identity", width = 1) +
geom_bar(aes(x = "", y = Avg, fill = "Average Capacity"), stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(x = NULL, y = "Capacity") +
scale_fill_manual(values = c("Remaining Capacity" = "yellow", "Average Capacity" = "red")) +
theme(panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
})
View(overview)
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = "", y = Remaining, fill = "Remaining Capacity"), stat = "identity", width = 1) +
geom_bar(aes(x = "", y = Avg, fill = "Avg"), stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(x = NULL, y = "Capacity") +
scale_fill_manual(values = c("Remaining Capacity" = "yellow", "Average Capacity" = "red")) +
theme(panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
})
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = "", y = Remaining, fill = remaining), stat = "identity", width = 1) +
geom_bar(aes(x = "", y = Avg, fill = "Avg"), stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(x = NULL, y = "Capacity") +
scale_fill_manual(values = c("Remaining Capacity" = "yellow", "Average Capacity" = "red")) +
theme(panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = "", y = Remaining, fill = remaining), stat = "identity", width = 1) +
geom_bar(aes(x = "", y = Avg, fill = "Avg"), stat = "identity", width = 1) +
labs(x = NULL, y = "Capacity") +
scale_fill_manual(values = c("Remaining Capacity" = "yellow", "Average Capacity" = "red")) +
theme(panel.grid = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = "", y = Remaining, fill = remaining), stat = "identity", width = 1) +
geom_bar(aes(x = "", y = Avg, fill = "Avg"), stat = "identity", width = 1) +
labs(x = NULL, y = "Capacity") +
scale_fill_manual(values = c("Remaining Capacity" = "yellow", "Average Capacity" = "red"))
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = Name, y = Capacity, fill = remaining), stat = "identity", width = 1) +
geom_bar(aes(x = "", y = Avg, fill = "Avg"), stat = "identity", width = 1) +
labs(x = NULL, y = "Capacity") +
scale_fill_manual(values = c("Remaining Capacity" = "yellow", "Average Capacity" = "red"))
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = Name, y = Capacity, fill = remaining), stat = "identity", width = 1) +
scale_fill_manual(values = c("Remaining Capacity" = "yellow", "Average Capacity" = "red"))
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = Name, y = Capacity, fill = remaining), stat = "identity", width = 1)
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = Name, y = Capacity, fill = Remaining), stat = "identity", width = 1)
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = Avg, y = Capacity, fill = Remaining), stat = "identity", width = 1)
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = Avg, y = Capacity, fill = Remaining), stat = "identity", width = 1)
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = Name, y = Capacity, fill = Remaining), stat = "identity", width = 1)
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = Name, y = Capacity, fill = Remaining), stat = "count", width = 1)
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = "", y = Capacity, fill = Remaining), stat = "count", width = 1)
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = "", y = Capacity, fill = Remaining), stat = "count")
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = "", y = Capacity, fill = Remaining),)
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = "", y = Capacity, fill = Remaining))
# Calculate the remaining capacity (total - average)
overview$Remaining <- overview$Capacity - overview$Avg
ggplot(overview) +
geom_bar(aes(x = Name, y = Capacity, fill = Remaining))
ggplot(overview) +
geom_bar(aes(x = Name, y = Capacity, fill = Remaining))
ggplot(overview) +
geom_bar(aes(x = Name, y = Capacity, fill = Remaining), stat = "identity") +
labs(x = "Name", y = "Capacity", fill = "Remaining") +
scale_fill_gradient(low = "yellow", high = "red") +
theme(panel.grid = element_blank(),
panel.background = element_blank())
overview %>%
filter(Name == "Calgary") %>%
ggplot() +
geom_bar(aes(x = Name, y = Capacity, fill = Remaining), stat = "identity") +
labs(x = "Name", y = "Capacity", fill = "Remaining") +
scale_fill_gradient(low = "yellow", high = "red") +
theme(panel.grid = element_blank(),
panel.background = element_blank())
overview %>%
filter(Name == "Calgary") %>%
ggplot() +
geom_bar(aes(x = Name, y = Capacity, fill = Remaining), stat = "identity") +
labs(x = "Name", y = "Capacity", fill = "Remaining") +
scale_fill_manual(values = c("yellow", "red")) +
theme(panel.grid = element_blank(),
panel.background = element_blank())
overview %>%
filter(Name == "Calgary") %>%
mutate(Remaining = factor(Remaining)) %>%
ggplot() +
geom_bar(aes(x = Name, y = Capacity, fill = Remaining), stat = "identity") +
labs(x = "Name", y = "Capacity", fill = "Remaining") +
scale_fill_manual(values = c("yellow", "red")) +
theme(panel.grid = element_blank(),
panel.background = element_blank())
overview %>%
filter(Name == "Calgary") %>%
mutate(Remaining = factor(Remaining)) %>%
ggplot() +
geom_bar(aes(x = Name, y = Capacity, fill = Remaining), stat = "identity") +
labs(x = "Name", y = "Capacity", fill = "Remaining") +
scale_fill_manual(values = c("red", "yellow")) +
theme(panel.grid = element_blank(),
panel.background = element_blank())
overview %>%
filter(Name == "Calgary") %>%
mutate(Remaining = factor(Remaining)) %>%
ggplot() +
geom_bar(aes(x = Name, y = Capacity, fill = Avg), stat = "identity") +
labs(x = "Name", y = "Capacity", fill = "Remaining") +
scale_fill_manual(values = c("red", "yellow")) +
theme(panel.grid = element_blank(),
panel.background = element_blank())
overview %>%
filter(Name == "Calgary") %>%
mutate(Remaining = factor(Remaining)) %>%
ggplot() +
geom_bar(aes(x = Name, y = Capacity, fill = Avg), stat = "identity") +
labs(x = "Name", y = "Capacity", fill = "Remaining") +
scale_fill_manual(values = c("red", "yellow")) +
theme(panel.grid = element_blank(),
panel.background = element_blank())
overview %>%
filter(Name == "Calgary") %>%
mutate(Remaining = factor(Remaining)) %>%
ggplot() +
geom_bar(aes(x = Name, y = Capacity, fill = Avg), stat = "identity") +
labs(x = "Name", y = "Capacity", fill = "Remaining") +
scale_fill_manual(values = c("red", "yellow")) +
theme(panel.grid = element_blank(),
panel.background = element_blank())
overview %>%
filter(Name == "Calgary") %>%
ggplot() +
geom_col(aes(x = Name, y = Capacity, fill = "Capacity"), width = 0.5) +
geom_col(aes(x = Name, y = Avg, fill = "Avg"), width = 0.5) +
labs(x = "Name", y = "Capacity", fill = NULL) +
scale_fill_manual(values = c("red", "yellow")) +
theme(panel.grid = element_blank(),
panel.background = element_blank())
overview %>%
filter(Name == "Calgary") %>%
ggplot() +
geom_col(aes(x = Name, y = Capacity, fill = "Capacity"), width = 1) +
geom_col(aes(x = Name, y = Avg, fill = "Avg"), width = 1) +
labs(x = "Name", y = "Capacity", fill = NULL) +
scale_fill_manual(values = c("red", "yellow")) +
coord_polar(theta = "y") +
theme(panel.grid = element_blank(),
panel.background = element_blank())
overview %>%
filter(Name == "Calgary") %>%
ggplot() +
geom_col(aes(x = Name, y = Capacity, fill = "Capacity"), width = 1, color = "white") +
geom_col(aes(x = Name, y = Avg, fill = "Avg"), width = 0.5, color = "white") +
geom_circle(aes(x0 = 0, y0 = 0, r = 0.5), color = "white", fill = "white") +
labs(x = "Name", y = "Capacity", fill = NULL) +
scale_fill_manual(values = c("red", "yellow")) +
coord_polar(theta = "y") +
theme(panel.grid = element_blank(),
overview %>%
filter(Name == "Calgary") %>%
ggplot() +
geom_col(aes(x = Name, y = Capacity, fill = "Capacity"), width = 1, color = "white") +
geom_col(aes(x = Name, y = Avg, fill = "Avg"), width = 0.5, color = "white") +
geom_circle(aes(x0 = 0, y0 = 0, r = 0.5), color = "white", fill = "white") +
labs(x = "Name", y = "Capacity", fill = NULL) +
scale_fill_manual(values = c("red", "yellow")) +
coord_polar(theta = "y") +
theme(panel.grid = element_blank(),
panel.background = element_blank())
overview %>%
filter(Name == "Calgary") %>%
ggplot() +
geom_rect(aes(xmin = -1, xmax = 1, ymin = -1, ymax = 1, fill = "Capacity"), color = "white") +
geom_rect(aes(xmin = -0.5, xmax = 0.5, ymin = -0.5, ymax = 0.5, fill = "Avg"), color = "white") +
labs(x = "Name", y = "Capacity", fill = NULL) +
scale_fill_manual(values = c("red", "yellow")) +
coord_polar(theta = "y") +
theme(panel.grid = element_blank(),
panel.background = element_blank())
overview %>%
filter(Name == "Calgary") %>%
ggplot() +
geom_col(aes(x = Name, y = Capacity, fill = "Capacity"), width = 1) +
geom_col(aes(x = Name, y = Avg, fill = "Avg"), width = 1) +
labs(x = "Name", y = "Capacity", fill = NULL) +
scale_fill_manual(values = c("red", "yellow")) +
coord_polar(theta = "y") +
theme(panel.grid = element_blank(),
panel.background = element_blank())
