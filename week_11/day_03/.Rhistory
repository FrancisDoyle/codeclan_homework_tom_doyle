library(tidyverse)
library(janitor)
library(factoextra)
mall <- clean_names(read_csv("data/mall_customers.csv")) %>%
select(-customer_id) %>%
mutate(gender = ifelse(gender == "female", 1,2))
# just realized i only needed spending score and annual income for this
skimr::skim(mall)
fviz_nbclust(mall,
kmeans,
method = "wss",
nstart = 25)
fviz_nbclust(mall, kmeans, method = "silhouette", nstart = 25)
fviz_nbclust(mall, kmeans, method = "gap_stat")
clustered_mall<- kmeans(mall, 3, nstart = 25)
clusters <- augment(clustered_mall, mall)
library(tidyverse)
library(janitor)
library(factoextra)
mall <- clean_names(read_csv("data/mall_customers.csv")) %>%
select(-customer_id) %>%
mutate(gender = ifelse(gender == "female", 1,2))
# just realized i only needed spending score and annual income for this
skimr::skim(mall)
fviz_nbclust(mall,
kmeans,
method = "wss",
nstart = 25)
fviz_nbclust(mall, kmeans, method = "silhouette", nstart = 25)
fviz_nbclust(mall, kmeans, method = "gap_stat")
clustered_mall<- kmeans(mall, 3, nstart = 25)
clusters <- augment(clustered_mall, mall)
library(tidyverse)
library(janitor)
library(factoextra)
library(broom)
mall <- clean_names(read_csv("data/mall_customers.csv")) %>%
select(-customer_id) %>%
mutate(gender = ifelse(gender == "female", 1,2))
# just realized i only needed spending score and annual income for this
skimr::skim(mall)
fviz_nbclust(mall,
kmeans,
method = "wss",
nstart = 25)
fviz_nbclust(mall, kmeans, method = "silhouette", nstart = 25)
fviz_nbclust(mall, kmeans, method = "gap_stat")
clustered_mall<- kmeans(mall, 3, nstart = 25)
clusters <- augment(clustered_mall, mall)
ggplot(clusters, aes(annual_income_k, spending_score_1_100, colour = .cluster)) +
geom_point()
clusters %>%
group_by(.cluster) %>%
summarise(mean(spending_score_1_100), mean(annual_income_k))
clustered_mall2<- kmeans(mall, 5, nstart = 25)
clusters2 <- augment(clustered_mall2, mall)
ggplot(clusters2, aes(annual_income_k, spending_score_1_100, colour = .cluster)) +
geom_point()
clusters2 %>%
group_by(.cluster) %>%
summarise(mean(spending_score_1_100), mean(annual_income_k))
